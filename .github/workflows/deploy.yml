name: Build and Deploy SmartNewsAPI
 #Testss
on:
  push:
    branches: [ "main" ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    # 1. Checkout Infra
    - name: Checkout Infra Repo
      uses: actions/checkout@v3
      with:
        repository: DavidMolta18/SmartNewsInfra
        path: infra
        token: ${{ secrets.GH_PAT }}

    # 2. Auth to GCP
    - name: Auth to GCP
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.DEPLOYER_SA }}

    # 3. Setup gcloud
    - name: Setup gcloud
      uses: google-github-actions/setup-gcloud@v2

    # 4. Setup Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    # 5. Terraform Init (crea bucket state, prepara providers)
    - name: Terraform Init
      run: terraform init -input=false
      working-directory: ./infra

    # 6. Terraform Apply Infra Base (Artifact Registry + IAM + Cloud Run "skeleton")
    - name: Terraform Apply Infra Base
      run: terraform apply -auto-approve \
        -var="project_id=${{ secrets.PROJECT_ID }}" \
        -var="region=${{ secrets.REGION }}" \
        -var="service_name=smartnewsapi"
      working-directory: ./infra

    # 7. Checkout API
    - name: Checkout API
      uses: actions/checkout@v3
      with:
        path: api

    # 8. Configure Docker auth
    - name: Configure Docker auth
      run: gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev

    # 9. Build & Push Docker Image
    - name: Build & Push Docker Image
      run: |
        IMAGE="${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/smartnewsapi/smartnewsapi:${{ github.sha }}"
        cd api
        docker build -t $IMAGE .
        docker push $IMAGE
        echo "IMAGE=$IMAGE" >> $GITHUB_ENV

    # 10. Terraform Apply Final (actualiza Cloud Run con la imagen reci√©n subida)
    - name: Terraform Apply Final
      run: terraform apply -auto-approve \
        -var="project_id=${{ secrets.PROJECT_ID }}" \
        -var="region=${{ secrets.REGION }}" \
        -var="service_name=smartnewsapi" \
        -var="image_url=$IMAGE" \
        -var="qdrant_url=${{ secrets.QDRANT_URL }}" \
        -var="qdrant_api_key=${{ secrets.QDRANT_API_KEY }}"
      working-directory: ./infra
